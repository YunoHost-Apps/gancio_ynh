packaging_format = 2

id = "gancio"
name = "Gancio"

description.en = "A shared agenda for local communities, federated with the fediverse."
description.fr = "Un agenda partagé pour les communautés locales, fédéré avec le fédiverse."

version = "1.6.10~ynh1"

maintainers = ["Lapineige"]

[upstream]
# NB: Only the "license" key is mandatory. Remove entries for which there's no relevant data
license = "AGPL v3"
website = "https://gancio.org"
demo = "https://demo.gancio.org/"
admindoc = "https://gancio.org/install/"
userdoc = "https://gancio.org/usage"
code = "https://framagit.org/les/gancio"


[integration]
yunohost = ">= 11.1.21"
# List of supported archs using the dpkg --print-architecture nomenclature (amd64/i386/armhf/arm64), for example: ["amd64", "i386']
architectures = "all"
multi_instance = false
ldap = false
sso = false
# FIXME: replace with an **estimate** minimum disk and RAM requirements. e.g. 20M, 400M, 1G... You may have have a look at CI results
disk = "50M"
ram.build = "50M"
ram.runtime = "50M"

[install]
    [install.domain]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "domain"

    [install.init_main_permission]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    # This won't be saved as setting and will instead be used to initialize the SSOwat permission
    type = "group"
    default = "visitors"

    [install.language]
    ask.en = "Choose the application language"
    ask.fr = "Choisissez la langue de l'application"
    type = "select"
    choices = "['en', 'fr', 'en', 'it', 'zh', 'pt', 'nl', 'ru']"
    default = "en"

    [install.admin]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "user"
    [install.password]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    # Note that user-provided passwords questions are not automatically saved as setting
    help.en = "Use the help field to add an information for the admin about this question."
    help.fr = "Utilisez le champ aide pour ajouter une information à l'intention de l'administrateur à propos de cette question."
    type = "password"

[resources]
    # See the packaging documentation for the full set
    # of explanation regarding the behavior and properties for each of those
    [resources.sources]

        [resources.sources.main]
        # This will pre-fetch the asset which can then be deployed during the install/upgrade scripts with :
        #    ynh_setup_source --dest_dir="$install_dir"
        # You can also define other assets than "main" and add --source_id="foobar" in the previous command
        url = ""
        sha256 = ""

        # These infos are used by https://github.com/YunoHost/apps/blob/master/tools/autoupdate_app_sources/autoupdate_app_sources.py
        # to auto-update the previous asset urls and sha256sum + manifest version
        # assuming the upstream's code repo is on github and relies on tags or releases
        # See the 'sources' resource documentation for more details

        # autoupdate.strategy = "latest_github_tag"
        [resources.system_user]
    # This will provision/deprovision a unix system user
    [resources.install_dir]
    # This will create/remove the install dir as /var/www/$app
    # and store the corresponding setting $install_dir
    
    [resources.data_dir]
    # This will create/remove the data dir as /home/yunohost.app/$app
    # and store the corresponding setting $data_dir
    subdirs = ['uploads', 'user_locale']
        [resources.permissions]
    # This will configure SSOwat permission for $domain/$path/
    # The initial allowed group of user is configured via the init_main_permission question (public=visitors, private=all_users)
    main.url = "/"

    [resources.ports]
    # This will pick a random port for reverse-proxying and store it as the $port setting
    [resources.apt]
    # This will automatically install/uninstall the following apt packages
    # and implicitly define the $phpversion setting as 8.0 (if phpX.Y-foobar dependencies are listed)
    packages = ""
    # This will configure an extra repository to install yarn dependency
    extras.yarn.repo = "deb https://dl.yarnpkg.com/debian/ stable main"
    extras.yarn.key = "https://dl.yarnpkg.com/debian/pubkey.gpg"
    extras.yarn.packages = "yarn"
        [resources.database]
        # This will automatically provision/deprovison a MySQL DB and store the corresponding credentials in settings $db_user, $db_name, $db_pwd
        type = "postgresql"
    
